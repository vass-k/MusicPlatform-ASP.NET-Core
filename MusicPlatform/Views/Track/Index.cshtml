@using MusicPlatform.Web.ViewModels.Track
@model TrackIndexPageViewModel

@{
    ViewData["Title"] = "Discover Tracks";
    Layout = "_Layout";
}

<!-- Custom CSS for the Track Index Page -->
<!-- For production, move this to your site's main CSS file -->
<style>
    body {
        background-color: #f2f2f2;
    }

    #tracks-section {
        padding: 100px 0;
    }

    .section-heading {
        text-align: center;
        margin-bottom: 40px;
    }

        .section-heading h2 {
            font-size: 42px;
            font-weight: 700;
            color: #1e1e1e;
        }

            .section-heading h2 em {
                font-style: normal;
                color: #ff5500;
            }

    .search-form-container {
        margin-bottom: 60px;
    }

        .search-form-container .input-group {
            border-radius: 50px;
            box-shadow: 0 5px 25px rgba(0,0,0,0.08);
            border: 1px solid #fff;
            overflow: hidden;
        }

        .search-form-container .form-control {
            border: none;
            padding: 15px 25px;
            font-size: 1rem;
            height: auto;
        }

            .search-form-container .form-control:focus {
                box-shadow: none;
                z-index: 1;
            }

        .search-form-container .btn-search {
            background-color: #ff5500;
            color: #fff;
            border: none;
            padding: 15px 30px;
            font-weight: 600;
            letter-spacing: 1px;
            text-transform: uppercase;
            transition: background-color 0.3s ease;
        }

            .search-form-container .btn-search:hover {
                background-color: #e64a00;
            }

    .track-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 30px;
    }

    .track-card {
        display: flex;
        flex-direction: column;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.07);
        overflow: hidden;
        transition: transform .2s ease-in-out, box-shadow .2s ease-in-out;
    }

        .track-card:hover {
            box-shadow: 0 8px 20px rgba(0,0,0,0.12);
        }

    .track-artwork-container {
        position: relative;
        width: 100%;
        aspect-ratio: 1 / 1;
    }

    .track-artwork {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
    }

    .play-button-overlay {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: rgba(255, 255, 255, 0.85);
        font-size: 60px;
        opacity: 0;
        transition: opacity 0.3s ease, transform 0.3s ease;
        text-shadow: 0 2px 8px rgba(0,0,0,0.5);
        pointer-events: none;
    }

    .track-play-btn {
        cursor: pointer;
    }

    .track-artwork-container {
        position: relative;
        width: 100%;
        aspect-ratio: 1 / 1;
        cursor: pointer;
    }

    .track-card:hover .play-button-overlay {
        opacity: 1;
    }

    .track-details {
        padding: 15px;
        flex-shrink: 0;
    }

    .track-progress-bar {
        height: 4px;
        background-color: #e5e5e5;
        border-radius: 2px;
        margin: 10px 0;
    }

    .track-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #1e1e1e;
        margin-bottom: 5px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .track-artist {
        font-size: 0.9rem;
        color: #888;
        margin-bottom: 15px;
    }

        .track-artist a, .track-title a {
            text-decoration: none;
            color: inherit;
        }

            .track-artist a:hover, .track-title a:hover {
                color: #ff5500;
            }

    .track-meta {
        display: flex;
        align-items: center;
        gap: 15px;
        font-size: 0.85em;
        color: #aaa;
    }

        .track-meta span i {
            margin-right: 5px;
        }

    .pagination-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 40px;
    }

    .pagination {
        display: flex;
        list-style: none;
        padding: 0;
        gap: 5px;
    }

    .page-item .page-link {
        padding: 10px 15px;
        border: 1px solid #ddd;
        text-decoration: none;
        color: #333;
        border-radius: 5px;
        transition: all 0.2s ease;
    }

    .page-item.active .page-link {
        background-color: #ff5500;
        color: #fff;
        border-color: #ff5500;
    }

    .page-item.disabled .page-link {
        color: #aaa;
        pointer-events: none;
        background-color: #f7f7f7;
    }

    .page-item:not(.disabled) .page-link:hover {
        background-color: #f0f0f0;
    }
</style>

<div id="tracks-section">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="section-heading">
                    <h2>Discover <em>New Tracks</em></h2>
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="search-form-container">
                    <form asp-controller="Track" asp-action="Index" method="get">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Search by track or artist..." name="searchString" value="@Model.SearchString">
                            <button class="btn btn-search" type="submit">Search</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="track-grid">
            @if (Model.PagedTracks.Items.Any())
            {
                @foreach (var track in Model.PagedTracks.Items)
                {
                    <div class="track-card">
                        <div class="track-artwork-container track-play-btn"
                             id="play-track-button"
                             data-track-id="@track.PublicId"
                             data-src="@track.AudioUrl"
                             data-title="@track.Title"
                             data-artist="@track.ArtistName"
                             data-artwork="@track.ImageUrl">

                            <img src="@track.ImageUrl" alt="Artwork for @track.Title" class="track-artwork">
                            <div class="play-button-overlay">
                                <i class="fa fa-play-circle"></i>
                            </div>
                        </div>
                        <div class="track-details">
                            <h4 class="track-title">
                                <a asp-controller="Track" asp-action="Details" asp-route-id="@track.PublicId">@track.Title</a>
                            </h4>
                            <p class="track-artist">
                                <a href="#">@track.ArtistName</a>
                            </p>
                            <div class="track-progress-bar"></div>
                            <div class="track-meta">
                                <span><i class="fa fa-play"></i>@track.Plays.ToString("N0")</span>
                                <span><i class="fa fa-heart"></i>@track.FavoritesCount.ToString("N0")</span>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-lg-12 text-center">
                    @if (!string.IsNullOrEmpty(Model.SearchString))
                    {
                        <p>No tracks found matching your search for "@Model.SearchString".</p>
                        <a asp-action="Index" class="btn btn-secondary mt-2">Clear Search</a>
                    }
                    else
                    {
                        <p>No tracks have been uploaded yet. Be the first!</p>
                    }
                </div>
            }
        </div>

        <div class="pagination-container">
            <nav aria-label="Track pages">
                <ul class="pagination">
                    <!-- Previous Button -->
                    <li class="page-item @(!Model.PagedTracks.HasPreviousPage ? "disabled" : "")">
                        <a class="page-link" asp-controller="Track" asp-action="Index"
                           asp-route-page="@(Model.PagedTracks.PageNumber - 1)"
                           asp-route-searchString="@Model.SearchString">
                           Previous
                        </a>
                    </li>

                    <!-- Page Number Buttons -->
                    @for (var i = 1; i <= Model.PagedTracks.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PagedTracks.PageNumber ? "active" : "")">
                            <a class="page-link" asp-controller="Track" asp-action="Index"
                               asp-route-page="@i"
                               asp-route-searchString="@Model.SearchString">@i</a>
                        </li>
                    }

                    <!-- Next Button -->
                    <li class="page-item @(!Model.PagedTracks.HasNextPage ? "disabled" : "")">
                        <a class="page-link" asp-controller="Track" asp-action="Index"
                           asp-route-page="@(Model.PagedTracks.PageNumber + 1)"
                           asp-route-searchString="@Model.SearchString">
                           Next
                       </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>